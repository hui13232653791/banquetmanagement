<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wangyh.banquet.dao.ProviderMapper" >
  <resultMap id="BaseResultMap" type="com.wangyh.banquet.vo.Provider" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="pno" property="pno" jdbcType="VARCHAR" />
    <result column="provider_name" property="providerName" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="INTEGER" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="food_name" property="foodName" jdbcType="VARCHAR" />
    <result column="price" property="price" jdbcType="INTEGER" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, pno, provider_name, sex, phone, address, food_name, price, state, create_date, 
    update_date
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from provider
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from provider
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.wangyh.banquet.vo.Provider" >
    insert into provider (id, pno, provider_name, 
      sex, phone, address, 
      food_name, price, state, 
      create_date, update_date)
    values (#{id,jdbcType=INTEGER}, #{pno,jdbcType=VARCHAR}, #{providerName,jdbcType=VARCHAR}, 
      #{sex,jdbcType=INTEGER}, #{phone,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{foodName,jdbcType=VARCHAR}, #{price,jdbcType=INTEGER}, #{state,jdbcType=INTEGER}, 
      #{createDate,jdbcType=TIMESTAMP}, #{updateDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.wangyh.banquet.vo.Provider" >
    insert into provider
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="pno != null" >
        pno,
      </if>
      <if test="providerName != null" >
        provider_name,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="foodName != null" >
        food_name,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="updateDate != null" >
        update_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="pno != null" >
        #{pno,jdbcType=VARCHAR},
      </if>
      <if test="providerName != null" >
        #{providerName,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="foodName != null" >
        #{foodName,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        #{price,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.wangyh.banquet.vo.Provider" >
    update provider
    <set >
      <if test="pno != null" >
        pno = #{pno,jdbcType=VARCHAR},
      </if>
      <if test="providerName != null" >
        provider_name = #{providerName,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="foodName != null" >
        food_name = #{foodName,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null" >
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wangyh.banquet.vo.Provider" >
    update provider
    set pno = #{pno,jdbcType=VARCHAR},
      provider_name = #{providerName,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=INTEGER},
      phone = #{phone,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      food_name = #{foodName,jdbcType=VARCHAR},
      price = #{price,jdbcType=INTEGER},
      state = #{state,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <!-- 多条件查询 -->
  <select id="selectByParams" parameterType="com.wangyh.banquet.query.ProviderQuery" resultType="com.wangyh.banquet.vo.Provider">
    select
    <include refid="Base_Column_List"></include>
    from
    provider
    <where>
      state = 0
      <!-- 供应商编号查询 -->
      <if test="null != pno and pno != ''">
        and pno like concat('%',#{pno},'%')
      </if>
      <!-- 供应商姓名查询 -->
      <if test="null != providerName and providerName != ''">
        and provider_name like concat('%',#{providerName},'%')
      </if>
      <!-- 供应食品查询 -->
      <if test="null != foodName and foodName != ''">
        and food_name like concat('%',#{foodName},'%')
      </if>
    </where>
  </select>

  <!-- 删除供应商 -->
  <update id="deleteBatch">
    update
    provider
    set
    state = 1
    where
    id in
    <foreach collection="array" item="item" open="(" close=")" separator=",">
      #{item}
    </foreach>
  </update>

</mapper>
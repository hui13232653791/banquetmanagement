<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wangyh.banquet.dao.OrderMapper" >
  <resultMap id="BaseResultMap" type="com.wangyh.banquet.vo.Order" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="o_id" property="oId" jdbcType="VARCHAR" />
    <result column="khno" property="khno" jdbcType="VARCHAR" />
    <result column="p_id" property="pId" jdbcType="VARCHAR" />
    <result column="package_number" property="packageNumber" jdbcType="INTEGER" />
    <result column="totalprice" property="totalprice" jdbcType="INTEGER" />
    <result column="pay_state" property="payState" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, o_id, khno, p_id, package_number, totalprice, pay_state, state, create_date, 
    update_date
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from `order`
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from `order`
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.wangyh.banquet.vo.Order" >
    insert into `order` (id, o_id, khno,
      p_id, package_number, totalprice, 
      pay_state, state, create_date, 
      update_date)
    values (#{id,jdbcType=INTEGER}, #{oId,jdbcType=VARCHAR}, #{khno,jdbcType=VARCHAR}, 
      #{pId,jdbcType=VARCHAR}, #{packageNumber,jdbcType=INTEGER}, #{totalprice,jdbcType=INTEGER},
      #{payState,jdbcType=VARCHAR}, #{state,jdbcType=INTEGER}, #{createDate,jdbcType=TIMESTAMP}, 
      #{updateDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.wangyh.banquet.vo.Order" >
    insert into `order`
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="oId != null" >
        o_id,
      </if>
      <if test="khno != null" >
        khno,
      </if>
      <if test="pId != null" >
        p_id,
      </if>
      <if test="packageNumber != null" >
        package_number,
      </if>
      <if test="totalprice != null" >
        totalprice,
      </if>
      <if test="payState != null" >
        pay_state,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="updateDate != null" >
        update_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="oId != null" >
        #{oId,jdbcType=VARCHAR},
      </if>
      <if test="khno != null" >
        #{khno,jdbcType=VARCHAR},
      </if>
      <if test="pId != null" >
        #{pId,jdbcType=VARCHAR},
      </if>
      <if test="packageNumber != null" >
        #{packageNumber,jdbcType=INTEGER},
      </if>
      <if test="totalprice != null" >
        #{totalprice,jdbcType=INTEGER},
      </if>
      <if test="payState != null" >
        #{payState,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.wangyh.banquet.vo.Order" >
    update `order`
    <set >
      <if test="oId != null" >
        o_id = #{oId,jdbcType=VARCHAR},
      </if>
      <if test="khno != null" >
        khno = #{khno,jdbcType=VARCHAR},
      </if>
      <if test="pId != null" >
        p_id = #{pId,jdbcType=VARCHAR},
      </if>
      <if test="packageNumber != null" >
        package_number = #{packageNumber,jdbcType=INTEGER},
      </if>
      <if test="totalprice != null" >
        totalprice = #{totalprice,jdbcType=INTEGER},
      </if>
      <if test="payState != null" >
        pay_state = #{payState,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null" >
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wangyh.banquet.vo.Order" >
    update `order`
    set o_id = #{oId,jdbcType=VARCHAR},
      khno = #{khno,jdbcType=VARCHAR},
      p_id = #{pId,jdbcType=VARCHAR},
      package_number = #{packageNumber,jdbcType=INTEGER},
      totalprice = #{totalprice,jdbcType=INTEGER},
      pay_state = #{payState,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <!-- 多条件查询 -->
  <select id="selectByParams" parameterType="com.wangyh.banquet.query.OrderQuery" resultType="com.wangyh.banquet.vo.Order">
    select o.id,o.o_id,c.customer_name as khno,p.package_name as p_id,
        o.package_number,o.totalprice,o.pay_state,o.state,
        o.create_date,o.update_date
    from `order` o
    left join customer c on o.khno=c.khno
    left join package p on o.p_id=p.id
    <where>
      <!-- 订单编号查询 -->
      <if test="null != oId and oId != ''">
        and o.o_id like concat('%',#{oId},'%')
      </if>
      <!-- 客户姓名查询 -->
      <if test="null != khno and khno != ''">
        and c.customer_name like concat('%',#{khno},'%')
      </if>
      <!-- 根据支付状态查询 -->
      <if test="null != payState and payState != ''">
        and o.pay_state = #{payState}
      </if>
      <!-- 根据订单状态查询 -->
      <if test="null != state">
        and o.state = #{state}
      </if>
      <!-- 根据订单时间查询 -->
      <if test="null != startTime">
        and o.create_date &gt; #{startTime}
      </if>
      <!-- 根据订单时间查询 -->
      <if test="null != endTime">
        and o.create_date &lt; #{endTime}
      </if>
      <!-- 根据订单时间查询 -->
      <if test="null != startTime and null != endTime">
        and o.create_date between #{startTime} and #{endTime}
      </if>
    </where>
    order by o.id desc
  </select>

  <!-- 删除菜品 -->
  <delete id="deleteBatch">
    delete from
    `order`
    where
    id in
    <foreach collection="array" item="item" open="(" close=")" separator=",">
      #{item}
    </foreach>
  </delete>
  
  <!-- 查询每月订单销售额 -->
  <select id="selectTotalePriceByYear" parameterType="string" resultType="map">
    SELECT month(create_date) as month,sum(totalprice) as totalprice
    FROM `order`
    <where>
        state = 1 and pay_state = 1
      <!-- 根据订单时间(年)查询 -->
      <if test="null != yearTime and '' != yearTime">
        and YEAR(create_date) = #{yearTime}
      </if>
    </where>
    GROUP BY month
  </select>


</mapper>
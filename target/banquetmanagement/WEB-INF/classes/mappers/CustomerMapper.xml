<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wangyh.banquet.dao.CustomerMapper" >
  <resultMap id="BaseResultMap" type="com.wangyh.banquet.vo.Customer" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="khno" property="khno" jdbcType="VARCHAR" />
    <result column="customer_name" property="customerName" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="INTEGER" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, khno, customer_name, sex, phone, address, state, create_date, update_date
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from customer
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from customer
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.wangyh.banquet.vo.Customer" >
    insert into customer (id, khno, customer_name, 
      sex, phone, address, 
      state, create_date, update_date
      )
    values (#{id,jdbcType=INTEGER}, #{khno,jdbcType=VARCHAR}, #{customerName,jdbcType=VARCHAR}, 
      #{sex,jdbcType=INTEGER}, #{phone,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{state,jdbcType=INTEGER}, #{createDate,jdbcType=TIMESTAMP}, #{updateDate,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.wangyh.banquet.vo.Customer" >
    insert into customer
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="khno != null" >
        khno,
      </if>
      <if test="customerName != null" >
        customer_name,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="updateDate != null" >
        update_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="khno != null" >
        #{khno,jdbcType=VARCHAR},
      </if>
      <if test="customerName != null" >
        #{customerName,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.wangyh.banquet.vo.Customer" >
    update customer
    <set >
      <if test="khno != null" >
        khno = #{khno,jdbcType=VARCHAR},
      </if>
      <if test="customerName != null" >
        customer_name = #{customerName,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null" >
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wangyh.banquet.vo.Customer" >
    update customer
    set khno = #{khno,jdbcType=VARCHAR},
      customer_name = #{customerName,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=INTEGER},
      phone = #{phone,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <!-- 多条件查询 -->
  <select id="selectByParams" parameterType="com.wangyh.banquet.query.CustomerQuery" resultType="com.wangyh.banquet.vo.Customer">
    select
    <include refid="Base_Column_List"></include>
    from
    customer
    <where>
      state = 0
      <!-- 客户编号查询 -->
      <if test="null != khno and khno != ''">
        and khno like concat('%',#{khno},'%')
      </if>
      <!-- 客户姓名查询 -->
      <if test="null != customerName and customerName != ''">
        and customer_name like concat('%',#{customerName},'%')
      </if>
      <!-- 手机号查询 -->
      <if test="null != phone and phone != ''">
        and phone like concat('%',#{phone},'%')
      </if>
      <!-- 详细地址查询 -->
      <if test="null != address and address != ''">
        and address like concat('%',#{address},'%')
      </if>
    </where>
  </select>

  <!-- 删除客户 -->
  <update id="deleteBatch">
    update
        customer
    set
        state = 1
    where
        id in
      <foreach collection="array" item="item" open="(" close=")" separator=",">
        #{item}
      </foreach>
  </update>

  <!-- 查询所有客户 -->
  <select id="queryAllCustomer" parameterType="int" resultType="java.util.Map">
    select
        cus.customer_name,cus.khno,
        case
            when IFNULL(temp.id,0)=0 THEN ''
            else 'selected'
        end
        as 'selected'
    from
        customer cus
    left join (select o.id,o.khno from `order` o where o.id = #{orderId}) temp
    on cus.khno = temp.khno
    where cus.state = 0
  </select>

  <!-- 通过客户ID查询客户的订单信息 -->
  <select id="queryCustomerOrderInfo" parameterType="int" resultType="com.wangyh.banquet.query.CustomerOrderInfo">
    SELECT c.khno,c.customer_name,COUNT(o.khno) as orderNumber,SUM(o.totalprice) as orderTotalprice
    FROM customer c
    LEFT JOIN `order` o
    on c.khno=o.khno
    where c.id = #{id}
  </select>

</mapper>